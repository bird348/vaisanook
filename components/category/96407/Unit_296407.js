import { Box, Heading, Text, UnorderedList, OrderedList, ListItem, Image, Divider } from "@chakra-ui/react"

export default function Unit_296407() {

    return(
        <>
            <Heading size="md" pb="2" mb="2" borderBottomColor="red.500" borderBottomWidth="2px">
                หน่วยที่ 2 <br />
                กระบวนการพัฒนาระบบสารสนเทศ
            </Heading>
            <Heading size="sm" pl="2" py="2" my="2" borderLeftColor="yellow.400" borderLeftWidth="10px">
                กระบวนการพัฒนาระบบเชิงโครงสร้าง
            </Heading>
            <Heading size="xs">วงจรการพัฒนาระบบสารสนเทศ</Heading>
                <Box pl="5" mt="1">
                    <Text fontStyle="italic">วงจรการพัฒนาระบบสารสนเทศ (SDLC) มีขั้นตอนพื้นฐาน 4 ขั้นตอน</Text>
                    <Text pl="3" color="gray.500">
                        <Text as="span" color="black">1. การวางแผนระบบ (system planning) </Text> <br />
                        เป็นกระบวนการพื้นฐานเพื่อทำความเข้าใจว่าทำใมจึงจำเป็นตองมีการพัฒนาระบบสารสนเทศ 
                        รวมทั้งการกำหนดวิธีการและทีมงานที่เกี่ยวข้องกับการพัฒนาโครงการให้เกิดขี้น การวางแผนมี 2 ช่วง ได้แก่
                    </Text>
                    <UnorderedList pl="5" color="gray.500">
                        <ListItem>ช่วงเริ่มต้นโครงการ</ListItem>
                        <ListItem>ขั้นตอนของการบริหารโครงการ</ListItem>
                    </UnorderedList>
                    <Text pl="3" color="gray.500">
                        <Text as="span" color="black">2. การวิเคราะห์ระบบ (system analysis) </Text> <br />
                        เป็นการศึกษาวิธีการดำเนินงานของระบบปัจจุบัน เพื่อให้เข้าใจการทำงานในระบบนั้นๆ 
                        ตลอดจนทราบถังปัญหา และเพื่อหาแนวทางแก้ใขปัญหาเหล่านั้น แบ่งได้เป็น 3 ขั้นตอน ได้แก่
                    </Text>
                    <UnorderedList pl="5" color="gray.500">
                        <ListItem>ขั้นตอนการพัฒนากลยุทธ์ในการวิเคราะห์</ListItem>
                        <ListItem>ขั้นตอนการรวบรวมความต้องการ</ListItem>
                        <ListItem>ขั้นตอนการวิเคราะห์แนวคิดของระบบและรูปแบบของระบบ</ListItem>
                    </UnorderedList>
                    <Text pl="3" color="gray.500">
                        <Text as="span" color="black">3. การออกแบบระบบ (system design) </Text> <br />
                        เป็นขั้นตอนที่จะตัดสินใจว่าระบบที่จะพัฒนาจะเป็นอย่างไร ในแง่ของฮาร์ดแวร์ ซอฟต์แวร์ 
                        และโครงสร้างพื้นฐานในระบบเครือข่าย ได้แก่ ส่วนต่อประสานกับผู้ใช้ ฟอร์มและรายงาน 
                        โปรแกรมที่จะใช้ ฐานข้อมูลและไฟล์ที่ต้องการใช้งาน การออกแบบระบบมี 4 ขั้นตอน ได้แก่
                    </Text>
                    <UnorderedList pl="5" color="gray.500">
                        <ListItem>การพัฒนากลยุทธ์การออกแบบระบบ</ListItem>
                        <ListItem>การออกแบบสถาปัตยกรรมขั้นพื้นฐานสำหรับระบบ</ListItem>
                        <ListItem>ข้อกำหนดของฐานข้อมูลและไฟล์ที่จะพัฒนาขี้นใช้งาน</ListItem>
                        <ListItem>ทีมงานนักออกแบบระบบ</ListItem>
                    </UnorderedList>
                    <Text pl="3" color="gray.500">
                        <Text as="span" color="black">4. การดำเนินการให้เกิดระบบจริง (system implementation) </Text> <br />
                        ขั้นตอนสุดท้ายในวงจรการพัฒนาระบบ เป็นขั้นตอนการดำเนินการให้เกิดระบบจริง 
                        เป็นขั้นตอนที่มักได้รับความสนใจมากที่สุด แบ่งได้เป็น 3 ขั้นตอน ได้แก่
                    </Text>
                    <UnorderedList pl="5" color="gray.500">
                        <ListItem>การสร้างระบบ</ListItem>
                        <ListItem>การติดตั้งระบบ</ListItem>
                        <ListItem>การกำหนดแผนให้การสนับสนุนระบบ</ListItem>
                    </UnorderedList>
                </Box>
            <Heading size="xs" mt="1">แนวคิดการออกแบบระบบเชิงโครงสร้าง</Heading>
            <Box pl="5" mt="1">
                <Text fontStyle="italic">การออกแบบระบบเชิงโครงสร้าง</Text>
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black">1. การพัฒนาแบบน้ำตก </Text> <br />
                    เป็นวิธีการออกแบบแบบดั่งเดิมที่มีแบบแผนและยังคงใช้กันจนถึงปัจจุบัน มี่ข้อดี 2ประการ
                </Text>
                <UnorderedList pl="5" color="gray.500">
                    <ListItem>สามารถกำหนดความต้องการของระบบก่อนที่จะเขียนโปรแกรม</ListItem>
                    <ListItem>ช่วยลดการเปลี่ยนแปลงความต้องการในโครงการ</ListItem>
                </UnorderedList>
                <Text pl="3" color="gray.500">และมีข้อจำกัด คือ</Text>
                <UnorderedList pl="5" color="gray.500">
                    <ListItem>
                        จะต้องทำการออกแบบระบบให้เสร็จก่อนจึงจะเริ่มเขียนโปรแกรม 
                        ทำให้จะต้องใช้แวลาค่อนข้างมากในช่วงจัดทำโครงการพัฒนาระบบตั้งแต่ขั้นตอนการวิเคราะห์ระบบ 
                        ผลคือความต้องการของผู้ใช้ที่เป็นประเด็นสำคัญอาจถูกมองข้าม
                    </ListItem>
                </UnorderedList>
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black">2. การพัฒนาระบบแบบคู่ขนาน </Text> <br />
                    เป็นการพยายามแก้ปัยหาเรื่องความล่าช้าระหว่างขั้นตอนการวิเคราะห์ระบบและการส่งมอบระบบ แทนที่จะออกแบบและพัฒนาระบบไปตามลำดับ 
                    จะแบ่งการพัฒนาระบบเป็นโครงการย่อยๆ  เพื่อออกแบบและดำเนินการพัฒนาระบบในแบบคู่ขนานกันไป เมื่อโครงการย่อยเสร็จสมบูรณ์ 
                    จึงนำมารวมกันแล้วส่งมอบระบบต่อไป ประโยชน์ของวิธีการนี้ คือ สามารถลดเวลา ทำให้การส่งมอบระบบทำได้เร็วขึ้น
                    แต่วิธีนี้ยังพบปัญหาการเกิดเอกสารเป็นจำนวนมากอยู่อีก และยังอาจเพิ่มปัญหาเนื่องจากบางโครงการย่อยไม่เป็นอิสระอย่างสมบูรณ์
                </Text>
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black"> 3 การพัฒนาระบบแบบรวดเร็ว (Rapid Application Development: RAD) </Text> <br />
                    วิธีนี้ยังคงใช้หลักการของวงจรการพัฒนาระบบ แต่พยายามที่จะแก้จุดอ่อนของการออกแบบเชิงโครงสร้าง 
                    โดยการปรับขั้นตอนในวงจรการพัฒนาระบบบางส่วนให้สามารถพัฒนาได้อย่างรวดเร็ว ลดเวลา 
                    ใช้เทคโนโลยีที่มีมาใหม่และเครื่องมือช่วยสร้างต่าง ๆ เพื่อข่วยในการพัฒนาระบบสารสนเทศ
                    ส่วนใหญ่วิธีการนี้จะแนะนำให้นักวิเคราะห์ระบบใช้เทคนิคพิเศษและใช้คอมพิวเตอร์เป็นเครื่องมือในการวิเคราะห์ 
                    ออกแบบ และพัฒนาระบบให้รวดเร็วยิ่งขึ้น เช่น CASE tool วิธีการนี้สามารถลดขั้นตอนของวงจรการพัฒนาระบบลงเหลือ 4 ขั้นตอน คือ 
                </Text>
                <UnorderedList pl="5" color="gray.500">
                    <ListItem>การวางแผนกำหนดความต้องการ</ListItem>
                    <ListItem>การออกแบบโดยผู้ใช้มีส่วนร่วม</ListItem>
                    <ListItem>การสร้างระบบ</ListItem>
                    <ListItem>การเปลี่ยนผ่านระบบ</ListItem>
                </UnorderedList>
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black">4. การพัฒนาเป็นระยะแบบค่อยเป็นค่อยไป (phased development) </Text> <br />
                    จะแบ่งระบบออกเป็นเวอร์ชั่นที่จะได้รับการพัฒนาไปโดยลำดับ ในขั้นตอนการวิเคราะห์จะแสดงให้เห็นแนวคิดโดยรวมของทั้งระบบ 
                    จากนั้นจึงจัดระบบเป็นหมวดหมู่ตามความต้องการ วิธีการนี้จะทำให้ผู้ใช้ระบบได้ใช้อย่างรวดเร็ว 
                    ขณะที่ระบบยังไม่สามารถทำงานได้ครบทุกหน้าที่ที่ผู้ใช้ต้องการ แต่เมื่อระบบได้รับการพัฒนาเสร็จสมบูรณ์ ในระยะเริ่มต้นใช้ระบบผู้ใข้จะทำงานตามที่มีอยู่ในระบบบเท่านั้น แต่ในไม่ช้าผู้ใช้จะมีแนวโน้มที่จะมีความต้องการเพิ่มเติม โดยวิธีนี้ผู้พัฒนาเจตนาที่จะค่อย ๆ พัฒนาระบบ ผู้ใช้จึงเริ่มต้นใช้งานระบบในขณะที่ระบบยังไม่มีความสมบูรณ์
                </Text>
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black">5. การสร้างต้นแบบ (prototyping) </Text> <br />
                    เป็นการสร้างต้นแบบของการวิเคราะห์ การออกแบบ และการดำเนินงานให้เกิดระบบควบคู่กันไป โดยมีการดำเนินการทั้ง 3 ขั้นตอน 
                    เป็นวงจรไปจนกว่าระบบจะเสร็จสมบูรณ์ พื้นฐานของการวิเคราะห์และออกแบบระบบจะดำเนินการทันทีที่เริ่มต้นสร้างต้นแบบระบบ ต้นแบบจะเป็นส่วนแรกของระบบที่ผู้ใช้จะได้ใช้
                    ประโยชน์ของวิธีการนี้ คือ การได้ระบบอย่างรวดเร็ว ให้ผู้ใช้โต้ตอบกับระบบ แม้จะยังไม่สมบูรณ์พร้อมใช้งาน ปัญหาสำคัญของวิธีการนี้ คือ การที่ระบบได้รับการเผยแพร่อย่างรวดเร็ว การวิเคาระห์จึงต้องทำอย่างรอบคอบ
                </Text>
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black">6 การสร้างต้นแบบแบบใช้แล้วทิ้ง (throwaway prototyping) </Text> <br />
                    คล้ายคลึงกันการสร้างต้นแบบแบบที่ใช้กันในการพัฒนาต้นแบบทั่วไป ต้นแบบแบบใช้แล้วทิ้งนี้่จะถูกใข้ในหลายวัตถุประสงค์ที่แตกต่างกัน
                    วิธีการนี้อาจทำให้เสียประโยชน์จากการที่ต้องใช้เวลาในการวิเคราะห์และออกแบบ แต่ข้อดีของการใช้ต้นแบบแบบนี้คือ 
                    ทำให้สามารถปรับแต่งประเด็นสำคัญได้ก่อนที่ระบบจริงจะถูกสร้างขึ้น
                </Text>
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black">7. การพัฒนาแบบอะไจล์ (Agile development) </Text> <br />
                    ป็นวิธีที่ตรงกันข้ามกับวิธีการพัฒนาระบบที่ต้องมีการวางแผนอย่างเป็นขั้นตอน วิธีนี้ไม่มีข้อจำกัดตายตัว จะเน้นที่ความรวดเร็ว ยืดหยุ่น 
                    พร้อมที่จะรับความเปลี่ยนแปลง เน้นที่การปรับปรุงระบบได้อย่างรวดเร็วหรือเน้นการพัฒนาเพื่อรองรับการเปลี่ยนแปลงในอนาคต 
                    เพื่อสร้างความพึงพอใจให้ลูกค้า นับเป็นหัวใจสำคัญของการพัฒนาระบบแบบอะไจล์
                </Text>
            </Box>
            <Text fontStyle="italic" pl="5">แนวทางเลือกวิธีการที่เหมาะสมในการพัฒนาระบบเชิงโครงสร้าง</Text>
            <OrderedList pl="8" color="gray.500">
                <ListItem>ความต้องการของผู้ใช้ยังไม่ชัดเจน</ListItem>
                <ListItem>ผู้ใช้ไม่คุ้นเคยกับเทคโนโลยี</ListItem>
                <ListItem>ความซับซ้อนของระบบ</ListItem>
                <ListItem>ความหน้าเชื่อถือของระบบ</ListItem>
                <ListItem>โครงการที่มีระยะเวลาสั้น</ListItem>
                <ListItem>โครงการที่สามารถเกิดได้</ListItem>
            </OrderedList>
            <Heading size="xs" mt="1">เครื่องมือการออกแบบระบบเชิงโครงสร้าง</Heading>
            <Text fontStyle="italic" pl="5" mt="1">
                ผังงาน (flowchart)
                เป็นเครื่องมือในการวางแผนเพื่อพัฒนาโปรแกรม ใช้สำหรับอธิบายลำดับขั้นตอนการทำงานในรูปแบบแผนภาพ แบ่งได้เป็น 2 ประเภท
            </Text>
            <Box pl="5">
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black">1. ผังงานระบบ (system flowchart)</Text> <br />
                    เป็นผังงานแสดงถึงขั้นตอนการทำงานภายในระบบงานหนึ่ง ๆ เพื่อให้เห็นภาพการทำงานของระบบ
                </Text>
                <Text pl="3" color="gray.500">
                    <Text as="span" color="black">2. ผังงานโปรแกรม (program flowchart)</Text> <br />
                    แสดงถึงขั้นตอนของคำสั่งที่ใช้ในโปรแกรม
                </Text>
                <Text pl="3">กฎของการเขียนผังงาน</Text>
                
                <UnorderedList pl="5" color="gray.500">
                    <ListItem>ผังงานจะต้องมีจุดเริ่มต้นและจุดสิ้นสุด</ListItem>
                    <ListItem>ใช้สัญลักษณ์มาตรฐานที่กำหนดไว้เท่านั้น</ListItem>
                    <ListItem>ใช้หัวลูกศรแสดงทิศทางการทำงาน โดยเน้นการทำงานจากบนลงล่างหรือจากซ้ายไปขวา</ListItem>
                    <ListItem>ทุกแผนภาพต้องมีลูกศรแสดงทิศทางเข้า 1 เส้น และออก 1 เส้น ยกเว้นสัญลักษณ์เงื่อนไขหรือการตัดสินใจที่มีทางออกได้มากกว่า 1 ทาง</ListItem>
                    <ListItem>เขียนแสดงการทำงานในแต่ละขั้นตอนด้วยข้อความที่กะทัดรัด เข้าใจง่าย</ListItem>
                    <ListItem>หลีกเลี่ยงการลากเส้นเชื่อมโยงการทำงานไปมาจนทำให้เกิดเส้นตัดมาก เพราะจะทำให้เกิดข้อผิดพลาดง่าย ควรใช้สัญลักษณ์จุดเชื่อมต่อการทำงานแทน</ListItem>
                    <ListItem>ควรเขียนผังงานให้เป็นระเบียบเรียบร้อย ชัดเจน เข้าใจง่าย</ListItem>
                    <ListItem>ควรมีการทดสอบความถูกต้องของการทำงานในผังงานก่อนนำไปเขียนโปรแกรม</ListItem>
                </UnorderedList>
            </Box>
            <Text fontStyle="italic" pl="5" mt="1">
                แผนภาพกระแสข้อมูล (Data Flow Diagram: DFD)
                แสดงให้ทราบขั้นตอนการทำงาน เพื่อแสดงให้ผู้ใช้ที่เป็นเจ้าของระบบได้เห็นรายละเอียดของระบบบงานว่าตรงกับ่ความต้องการที่กำหนดไว้หรือไม่
                สัญลักษณ์ที่ใช้ในการเขียนแผนภาพกระแสข้อมูล (ของ Gane and Sarson)
            </Text>
            <Box pl="5" color="gray.500">
                สัญลักษณ์สิ่งที่อยู่ภายนอก
                <Image src="/1.png" w="70px" h="40px" my="1" />
                <Divider />
                สัญลักษณ์กระแสข้อมูล
                <Image src="/2.png" w="80px" h="15px" my="4" />
                <Divider />
                สัญลักษณ์การประมวลผล
                <Image src="/3.png" w="70px" h="40px" my="1" />
                <Divider />
                สัญลักษณ์แหล่งเก็บข้อมูล
                <Image src="/4.png" w="80px" h="40px" my="1" />
                <Divider />
            </Box>



            <Heading size="sm" pl="2" py="2" my="2" borderLeftColor="yellow.400" borderLeftWidth="10px">
                กระบวนการพัฒนาระบบเชิงวัตถุ
            </Heading>
            <Heading size="xs">แนวคิดการออกแบบระบบเชิงวัตถุ</Heading>
            <Box pl="5" mt="1">
                <Text fontStyle="italic" color="black">การใช้ยูสเคสในการขับเคลื่อน</Text>
                <Text pl="3" color="gray.500">
                    เป็นการใช้บูสเคสเพื่อเป็นเครื่องมือสำหรับสร้างแบบจำลองกำหนดพฤติกรรมของระบบ โดยยูสเคสอธิยายถึงวิธีการที่ผู้ใช้จะโต้ตอบกับระบบเพื่อดำเนินกิจกรรมบางอย่าง เช่น 
                    การสำรองห้องพัก การค้นหาข้อมูล เป็นต้น ยูสเคสจะเน้นที่กิจกรรมในช่วงเวลา ตรงข้ามกับแผนภาพการประมวลผลที่ใช้วิธีการเชิงโครงสร้าง 
                    จึงต้องให้นักวิเคราะห์ระบบและผู้ใช้ร่วมกันพัฒนาแบบจำลองของระบบ
                </Text>
                <Text fontStyle="italic" color="black">การใช้สถาปัตยกรรมเป็นศูนย์กลาง</Text>
                <Text pl="3" color="gray.500">
                    เป็นวิธีวิเคราะห์และออกแบบระบบโดยใช้สถาปัตยกรรมเป็นศูนย์กลางการออกแบบ สถาปัตยกรรมที่นี้หมายถึง สถาปัตยกรรมซอฟต์แวร์ 
                    การระบุข้อกำหนดของระบบ การสร้างระบบ การทำเอกสารของระบบ การวิเคราะห์และออกแบบเชิงวัตถุควรรองรับการทำงานร่วมกันในระบบ
                    มุมมองการทำงานจะอธิบายถึงพฤติกรรมภายนอกระบบจากมุมมองของผู้ใช้ โดยใช้แผนภาพยูสเคสในการแสดงมุมมองการทำงาน
                </Text>
                <Text fontStyle="italic" color="black">การใช้ซ้ำและการทำเพิ่ม</Text>
                <Text pl="3" color="gray.500">
                    การวิเคราะห์และออกแบบเชิงวัตถุในแนวใหม่จะเน้นการนำมาใช้ซ้ำและการพัฒนาเพิ่มขึ้นจากเดิม
                </Text>
            </Box>
            <Heading size="xs" mt="1">การะบวนการแบบครบวงจร</Heading>
            <Box pl="5" color="gray.500" ml="1">
                เป็นวิธิการใช้เทคนิคยุเอ็มแอล ในการวิเคราะห์และออกแบบเชิงวัตถุ 
                เนื่องจากยูเอ็มแอลสามารถรองรับการพัฒนาโครงสร้างและการกำหนดพฤติกรรมการทำงานของระบบ
                <Text fontStyle="italic" color="black" mt="1">กระบวนการแบบครบวงจรเป็นการพัฒนาระบบสารสนเทศในสองมิติ อธิบายได้ด้วย</Text>
                <Text color="black" pl="3">ขั้นตอน</Text>
                <UnorderedList pl="5">
                    <ListItem>ขั้นตอนการเริ่มต้นของงาน (inception)</ListItem>
                    <ListItem>ขั้นตอนการทำอย่างละเอียดรอบคอบ (elaboration)</ListItem>
                    <ListItem>ข้นตอนการสร้างงาน (construction)</ListItem>
                    <ListItem>ขั้นตอนการเปลี่ยนผ่าน (transition)</ListItem>
                </UnorderedList>
                <Text color="black" pl="3">กระแสงาน</Text>
                <Box pl="5">
                    1. กระแสงานวิศวกรรม (engineering workflow)
                    <UnorderedList pl="3">
                        <ListItem>ขั้นตอนการสร้างแบบจำลองทางธุรกิจ</ListItem>
                        <ListItem>ขั้นตอนการรวบรวมความต้องการ</ListItem>
                        <ListItem>ขั้นตอนการวิเคราะห์</ListItem>
                        <ListItem>ขั้นตอนการออกแบบ</ListItem>
                        <ListItem>ขั้นตอนการดำเนินงานจนเกิดระบบจริง</ListItem>
                        <ListItem>ขั้นตอนการทดสอบ</ListItem>
                        <ListItem>ขั้นตอนการใช้งาน</ListItem>
                    </UnorderedList>
                    2. กระแสงานสนับสนุน (supporting workflow)
                    <UnorderedList pl="3">
                        <ListItem>ขั้นตอนการบริหารจัดการโครงการ</ListItem>
                        <ListItem>ขั้นตอนการกำหนดองค์ประกอบและการจัดการการเปลี่ยนแปลง</ListItem>
                        <ListItem>ขั้นตอนการกำหนดสภาพแวดล้อม</ListItem>
                    </UnorderedList>
                </Box>
                <Text color="black" pl="3">การขยายกระบวนการแบบครบวงจร</Text>
                <Text color="gray.500" pl="3">กระบวนการแบบครบวงจรจะใช้ผู้เขียนโปรแกรมเป็นจำนวนมากเพื่อชี้ให้เห็นจุดอ่อนที่สำคัญ คือ</Text>
                <UnorderedList pl="5">
                    <ListItem>กระบวนการแบบครบวงจรไม่เกี่ยวข้องกับการจัดการกลุ่มผู้ร่วมพัฒนาระบบ การจัดทำงบประมาณหรือการทำสัญญา</ListItem>
                    <ListItem>กระบวนการแบบครบวงจรไม่ได้แก้ปัญหาที่เกี่ยวข้องกับการบำรุงรักษาระบบ</ListItem>
                    <ListItem>กระบวนการแบบครบวงจรไม่ได้แก้ประเด็นปัญหาที่เกิดขึ้นในโครงการ แต่ให้ความสำคัญในเรื่องการนำมาใช้ซ้ำในการพัฒนาระบบเชิงวัตถุ</ListItem>
                </UnorderedList>
                <Text color="black" pl="3">ขั้นตอนการผลิต</Text>
                <Text color="gray.500" pl="3">มุ่งในประเด็นที่เกี่ยวข้องกับการปรับปรุงบำรุงรักษา และการทำงานของซอฟต์แวร์ ต่างจากขั้นตอนก่อนหน้านี้ที่ไม่มีการนำมาใช้ซ้ำหรือการทำเพิ่ม</Text>
                <UnorderedList pl="5">
                    <ListItem>กระแสงานการดำเนินงานและการสนับสนุน</ListItem>
                    <ListItem>กระแสงานการจัดการโครงสร้างพื้นฐาน</ListItem>
                </UnorderedList>
                <Text color="black" pl="3">การปรับเปลี่ยนและการขยายกระแสงานที่มีอยู่</Text>
                <UnorderedList pl="5">
                    <ListItem>การทดสอบ (testing)</ListItem>
                    <ListItem>การใช้งาน (deployment)</ListItem>
                    <ListItem>สภาพแวด (environment)</ListItem>
                    <ListItem>การบริหารจัดการโครงการ (project management)</ListItem>
                    <ListItem>การกำหนดองค์ประกอบและการจัดการการเปลี่ยนแปลง (configuration and change management)</ListItem>
                </UnorderedList>
                <Text color="black" pl="3">ภาษาที่ใช้สร้างแบบจำลองแบบครบวงจร (Unified Modeling Language: UML)</Text>
                <Text color="gray.500" pl="3">เป็นเทคนิคการสร้างแผนภาพที่จะใช้นำเสนอในรูปแบบกราฟิก ซึ่งจะมีแบบจำลองโครงการพัฒนาระบบที่ได้จากการวิเคราะห์ ไปจนถึงการพัฒนาจนเกิดระบบงานจริง</Text>
            </Box>
            <Heading size="xs" mt="1">เครื่องมือของการออกแบบระบบเชิงวัตถุ</Heading>
            <Text fontStyle="italic" color="black" pl="5" mt="1">วิธีการเชิงฟังก์ชั่น</Text>
            <Text pl="8" color="gray.500">
                เป็นการมองปัญหาของกระบวนการทำงาน ซึ่งสามารถแตกกระบวนการทำงานเป็นส่วนย่อย ๆ เรียกว่า “ฟังก์ชั่น”
            </Text>
            <Text fontStyle="italic" color="black" pl="5" mt="1">วิธีการเชิงวัตถุ</Text>
            <Text pl="8" color="gray.500">
                ป็นการมองปัญหาของระบบบนความคิดของโลกของความเป็นจริง โดยมองสิ่งต่าง ๆ เป็นวัตถุ (object) ที่มีความเป็นอิสระ ไม่ขึ้นต่อกัน แต่สามารถทำงานร่วมกันได้
            </Text>
            <Box pl="8">
                โมเดลที่ใช้ในการวิเคราะห์และออกแบบเชิงวัตถุ
                <UnorderedList color="gray.500" pl="3">
                    <ListItem>ฟังก์ชั่นนอลโมเดล เป็นโมเดลที่ใช้แสดงความต้องการทั้งหมดของระบบ โดยใช้เครื่องมือที่เรียกว่า “แผนภาพยูสเคส”</ListItem>
                    <ListItem>อ็อบเจ็กต์โมเดล เป็นโมเดลที่ใช้แสดงโ่ครงสร้างของระบบในรูปของคลาส ซึ่งมาจากความต้องการทั้งหมดของระบบ แสดงไว้ในฟังก์ชั่นนอลโมเดล ประกอบด้วยแผนภาพคลาส และแผนภาพคอมโพเน้นต์</ListItem>
                    <ListItem>ไดนามิกโมเดล เป็นโมเดลที่้แสดงการทำงานระหว่างวัตถุตามที่ได้มีการส่งข้อความไปมาระหว่างวัตถุ และเป็นวัตถุที่สร้างชึ้นจากคลาสที่ได้ออกแบบไว้ในอ็อบเจ็กต์โมเดล โดยมีคุณสมบัติและหน้าที่การทำงานเช่นเดียวกับคลาสต้นแบบ</ListItem>
                </UnorderedList>
            </Box>
            <Text fontStyle="italic" color="black" pl="5" mt="1">สรุปความแตกต่างระหว่างเครื่องมือการออกแบบเชิงโครงสร้างกับเชิงวัตถุ</Text>
            <Box pl="8">
                เครื่องมือการออกแบบเชิงโครงสร้าง
                <UnorderedList color="gray.500" pl="3">
                    <ListItem>ในการออกแบบ จะวิเคราะห์จากเอกสาร รายงานหรือผลลัพธ์ กระบวนการทำงานหรือโพรเซสของระบบ</ListItem>
                    <ListItem>หากมีการเปลี่ยนแปลงองค์ประกอบในระบบ จะกระทบกับองค์ประกอบอื่น ๆ ด้วย</ListItem>
                    <ListItem>การปรับแก้ระบบ มักต้องมีการแก้ไขโปรแกรมโดยรวมของทั้งระบบ</ListItem>
                </UnorderedList>
                เครื่องมือการออกแบบเชิงวัตถุ
                <UnorderedList color="gray.500" pl="3">
                    <ListItem>ในการออกแบบ จะวิเคราะห์จากวัตถุ ที่ประกอบด้วยกิจกรรมและการกระทำ</ListItem>
                    <ListItem>หากมีการเปลี่ยนแปลงของวัตถุใดวัตถุหนึ่ง จะไม่กระทบกับวัตถุอื่น ๆ ส่วนประกอบต่าง ๆ ในระบบจะเป็นอิสระไม่ขึ้นต่อกัน</ListItem>
                    <ListItem>การปรับแก้ระบบ จะกระทำที่คุณสมบัติและหน้าที่การทำงานของวัตถุบางวัตถุเท่านั้น</ListItem>
                </UnorderedList>
            </Box>

            <Text textAlign="center" textColor="red.500" my="5">*** END ***</Text>
        </>
    )
}